{"google":"UA-29670723-1","body":"[![Build Status](https://secure.travis-ci.org/fnichol/knife-server.png?branch=master)](http://travis-ci.org/fnichol/knife-server) [![Dependency Status](https://gemnasium.com/fnichol/knife-server.png)](https://gemnasium.com/fnichol/knife-server)\r\n\r\nAn Opscode Chef knife plugin to manage Chef Servers. Currently only\r\nbootstrapping new Chef Servers is supported (on Amazon's EC2) but node\r\ndata backup and restore is planned.\r\n\r\n## <a name=\"usage\"></a> Usage\r\n\r\nFollow the [installation](#installation) instructions, then you are ready\r\nto create your very own Chef Server running Ubuntu on Amazon's EC2 service:\r\n\r\n```bash\r\n$ knife server bootstrap ec2 --ssh-user ubuntu \\\r\n    --node-name chefapalooza.example.com\r\n```\r\n\r\nSee [below](#subcommands) for more details.\r\n\r\n## <a name=\"installation\"></a> Installation\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n```ruby\r\ngem 'knife-server'\r\n```\r\n\r\nAnd then execute:\r\n\r\n```bash\r\n$ bundle\r\n```\r\n\r\nOr install it yourself as:\r\n\r\n```bash\r\n$ gem install knife-server\r\n```\r\n\r\n### <a name=\"installation-knife\"></a> knife.rb Setup\r\n\r\nMost options can be passed to the knife subcommands explicitly but this\r\nquickly becomes tiring, repetitive, and error-prone. A better solution is to\r\nadd some of the common configuration to your `~/.chef/knife.rb` or your\r\nprojects `.chef/knife.rb` file like so:\r\n\r\n```ruby\r\nknife[:aws_access_key_id] = \"MY_KEY\"\r\nknife[:aws_secret_access_key] = \"MY_SECRET\"\r\nknife[:region] = \"us-west-2\"\r\nknife[:availability_zone] = \"us-west-2a\"\r\nknife[:flavor] = \"t1.micro\"\r\n```\r\n\r\nBetter yet, why not try a more generic [knife.rb][chef_bootstrap_knife_rb] file\r\nfrom the [chef-bootstrap-repo][chef_bootstrap_repo] project?\r\n\r\n## <a name=\"subcommands\"></a> Subcommands\r\n\r\n### <a name=\"knife-server-bootstrap\"></a> knife server bootstrap\r\n\r\nThese subcommands will install and configure an Open Source Chef Server on\r\nseveral different clouds/environments. The high level step taken are as\r\nfollows:\r\n\r\n1. Provision or use a node and install the Chef Server software fronted by\r\n   an Apache2 instance handling SSL for the API port (TCP/443) and the\r\n   WebUI web application (TCP/444).\r\n2. Fetch the validation key from the server and install it onto the\r\n   workstation issuing the knife subcommand. The validation key will be\r\n   installed at the path defined in the knife `validation_key` variable.\r\n   If a key already exists at that path a backup copy will be made in the\r\n   same directory.\r\n3. Create an initial admin client key called `root` in the root user's account\r\n   on the server which can be used for local administration of the Chef\r\n   Server.\r\n4. Create an admin client key with the name defined in the knife\r\n   `node_name` configuration variable and install it onto the workstation\r\n   issuing the knife subcommand. The client key will be installed at the\r\n   path defined in the knife `client_key` configuration variable. If a key\r\n   already exists at that path a backup copy will be made in the same\r\n   directory.\r\n\r\n#### Common Configuration\r\n\r\n##### --node-name NAME (-N)\r\n\r\nThe name of your new Chef Server. The hostname of the system will be set to\r\nthis value and the self signed SSL certificate will use this value as its CN.\r\nIdeally this will correspond to the A or CNAME DNS record.\r\n\r\nThis option is **required**.\r\n\r\n##### --platform PLATFORM (-P)\r\n\r\nThe platform type that will be bootstrapped. By convention a bootstrap\r\ntemplate of `chef-server-#{platform}.erb` will be searched for in the\r\ntemplate lookup locations (gems, .chef directory, etc.).\r\n\r\nThe default value is `\"debian\"` which support Debian and Ubuntu platforms.\r\n\r\n##### --ssh-user USER (-x)\r\n\r\nThe SSH username used when bootstrapping the Chef Server node. Note that the\r\nsome Amazon Machine Images (AMIs) such as the official Canonical Ubuntu images\r\nuse non-root SSH users (`\"ubuntu\"` for Ubuntu AMIs).\r\n\r\nThe default value is `\"root\"`.\r\n\r\n##### --ssh-port PORT (-p)\r\n\r\nThe SSH port used when bootstrapping the Chef Server node.\r\n\r\nThe default value is `\"22\"`.\r\n\r\n##### --identity-file IDENTITY\\_FILE (-i)\r\n\r\nThe SSH identity file used for authentication.\r\n\r\n##### --prerelease\r\n\r\nInstalls a pre-release Chef gem rather than a stable release version.\r\n\r\n##### --bootstrap-version VERSION\r\n\r\nThe version of Chef to install.\r\n\r\n##### --template-file TEMPLATE\r\n\r\nThe full path to location of template to use.\r\n\r\n##### --distro DISTRO (-d)\r\n\r\nBootstraps the Chef Server using a particular bootstrap template.\r\n\r\nThe default is `\"chef-server-#{platform}\"`.\r\n\r\n##### --webui-password PASSWORD\r\n\r\nThe initial password for the WebUI admin account.\r\n\r\nThe default value is `\"chefchef\"`.\r\n\r\n##### --amqp-password PASSWORD\r\n\r\nThe initial password for AMQP.\r\n\r\nThe default value is `\"chefchef\"`.\r\n\r\n### <a name=\"knife-server-bootstrap-ec2\"></a> knife server bootstrap ec2\r\n\r\nProvisions an EC2 instance on the Amazon Web Services (AWS) cloud and sets\r\nup an Open Source Chef Server as described [above](#knife-server-bootstrap).\r\nIn addition, the following steps are taken initially:\r\n\r\n1. Create and configure an EC2 Security Group called **\"infrastructure\"** for\r\n   the Chef Server instance. TCP ports 22, 443, and 444 are permitted inbound\r\n   for SSH, the API endpoint, and the WebUI web application respectively.\r\n2. An EC2 instance will be provisioned using configuration and/or defaults\r\n   present using the [knife-ec2][knife-ec2] plugin.\r\n\r\n#### Configuration\r\n\r\n##### --aws-access-key-id KEY (-A)\r\n\r\nYour AWS access key ID.\r\n\r\nThis option is **required**.\r\n\r\n##### --aws-secret-access-key SECRET (-K)\r\n\r\nYour AWS API secret access key.\r\n\r\nThis option is **required**.\r\n\r\n##### --region REGION\r\n\r\nThe desired AWS region, such as `\"us-east-1\"` or `\"us-west-2\"`.\r\n\r\nThe default value is `\"us-east-1\"` but is strongly encouraged to be set\r\nexplicitly.\r\n\r\n##### --ssh-key KEY (-S)\r\n\r\nThe AWS SSH key id.\r\n\r\n##### --flavor FLAVOR (-f)\r\n\r\nThe flavor of EC2 instance (m1.small, m1.medium, etc).\r\n\r\nThe default value is `\"m1.small\"`.\r\n\r\n##### --image IMAGE (-I)\r\n\r\nThe AMI for the EC2 instance.\r\n\r\n##### --availability-zone ZONE (-Z)\r\n\r\nThe availability zone for the EC2 instance.\r\n\r\nThe default value is `\"us-east-1b\"`.\r\n\r\n##### --groups X,Y,Z (-G)\r\n\r\nThe security groups for this EC2 instance.\r\n\r\nThe default value is `\"infrastructure\"`.\r\n\r\n##### --tags T=V\\[,T=V,...\\] (-T)\r\n\r\nThe tags for this EC2 instance.\r\n\r\nThe resulting set will include:\r\n\r\n* `\"Node=#{config[:chef_node_name]}\"`\r\n* `\"Role=chef_server\"`\r\n\r\n##### --ebs-size SIZE\r\n\r\nThe size of the EBS volume in GB, for EBS-backed instances.\r\n\r\n##### --ebs-no-delete-on-term\r\n\r\nDo not delete EBS volumn on instance termination.\r\n\r\n## <a name=\"roadmap\"></a> Roadmap\r\n\r\n* Support for other platforms (alternative bootstrap templates)\r\n* Support for Rackspace provisioning (use knife-rackspace gem)\r\n* Support for standalone server provisioning\r\n* knife server backup {nodes,roles,environments,data bags,all}\r\n* knife server backup backed by s3 (fog api)\r\n* knife server backup backed by local filesystem\r\n* knife server restore {nodes,roles,environments,data bags,all}\r\n* knife server restore from s3 archive (fog api)\r\n* knife server restore from by local filesystem\r\n\r\n## <a name=\"development\"></a> Development\r\n\r\n* Source hosted at [GitHub][repo]\r\n* Report issues/questions/feature requests on [GitHub Issues][issues]\r\n\r\nPull requests are very welcome! Make sure your patches are well tested.\r\nIdeally create a topic branch for every separate change you make. For\r\nexample:\r\n\r\n1. Fork the repo\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Added some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create new Pull Request\r\n\r\n## <a name=\"authors\"></a> Authors\r\n\r\nCreated and maintained by [Fletcher Nichol][fnichol] (<fnichol@nichol.ca>)\r\n\r\n## <a name=\"license\"></a> License\r\n\r\nApache License, Version 2.0 (see [LICENSE][license])\r\n\r\n[license]:      https://github.com/fnichol/knife-server/blob/master/LICENSE\r\n[fnichol]:      https://github.com/fnichol\r\n[repo]:         https://github.com/fnichol/knife-server\r\n[issues]:       https://github.com/fnichol/knife-server/issues\r\n[contributors]: https://github.com/fnichol/knife-server/contributors\r\n\r\n[chef_bootstrap_knife_rb]:  https://github.com/fnichol/chef-bootstrap-repo/blob/master/.chef/knife.rb\r\n[chef_bootstrap_repo]:      https://github.com/fnichol/chef-bootstrap-repo/\r\n[knife-ec2]:                https://github.com/opscode/knife-ec2\r\n","note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"An Opscode Chef knife plugin to manage Chef Servers","name":"Knife::Server"}